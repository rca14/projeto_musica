{
    // the transport and timing data
    header: {
      name: String, // the name of the first empty track, 
        // which is usually the song name
      tempos: TempoEvent[], // the tempo, e.g. 120
      timeSignatures: TimeSignatureEvent[], // the time signature, e.g. [4, 4],
  
      PPQ: Number // the Pulses Per Quarter of the midi file
                                        // this is read only
    },
  
    duration: Number, // the time until the last note finishes
    // an array of midi tracks
    tracks: [
        {
        name: String, // the track name if one was given
  
        channel: Number, // channel
            // the ID for this channel; 9 and 10 are
            // reserved for percussion
        notes: [
                {
            midi: Number, // midi number, e.g. 60
            time: Number, // time in seconds
            ticks: Number, // time in ticks
            name: String, // note name, e.g. "C4",
            pitch: String, // the pitch class, e.g. "C",
            octave : Number, // the octave, e.g. 4
            velocity: Number, // normalized 0-1 velocity
            duration: Number, // duration in seconds between noteOn and noteOff
                }
            ],
            // midi control changes
        controlChanges: {
                // if there are control changes in the midi file
          '91': [
                    {
              number: Number, // the cc number
              ticks: Number, // time in ticks
              time: Number, // time in seconds
              value: Number, // normalized 0-1
                    }
                ],
            },
  
        instrument: { // and object representing the program change events
          number : Number, // the instrument number 0-127
          family: String, // the family of instruments, read only.
          name : String, // the name of the instrument
          percussion: Boolean, // if the instrument is a percussion instrument
            },
        }
    ]
}